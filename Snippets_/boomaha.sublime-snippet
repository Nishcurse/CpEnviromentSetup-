<snippet>
	<content><![CDATA[
	
/*   authored by ->                       \       ___                         ___            ___            
       :\     /;               _          \      /\  \                       /\__\          /\  \   
      ;  \___/  ;             ; ;         \      \:\  \        ___          /:/ _/_         \:\  \  
     ,:-"'   `"-:.            / ;         \       \:\  \      /\__\        /:/ /\  \         \:\  \                   
_   /,---.   ,---.\   _     _; /          \       \:\  \      /\__\        /:/ /\  \         \:\  \     
_:>((  |  ) (  |  ))<:_ ,-""_,"           \   _____\:\  \    /:/__/       /:/ /::\  \    ___ /::\  \       
    \`````   `````/""""",-""              \  /::::::::\__\  /::\  \      /:/_/:/\:\__\  /\  /:/\:\__\            
     '-.._ v _..-'      )                 \  \:\~~\~~\/__/  \/\:\  \__   \:\/:/ /:/  /  \:\/:/  \/__/       
       / ___   ____,..  \                 \   \:\  \           \:\/\__\   \::/ /:/  /    \::/__/            
      / /   | |   | ( \. \                \    \:\  \           \::/  /    \/_/:/  /      \:\  \                   
     / /    | |    | |  \ \               \     \:\__\          /:/  /       /:/  /        \:\__\     
                                          |      \/__/          \/__/        \/__/          \/__/        
*/
#include "bits/stdc++.h"
using namespace std;

typedef long long int ll;

#define nishUwU    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);                                             
#define sz(v)      (int)v.size()
#define all(v)     v.begin(),v.end()
#define ff         first
#define ss         second
#define gcd(a,b)   __gcd(a,b)
#define lcd(a,b)   a*(b/gcd(a,b))
#define add(a,b)   a = (a % mod + b % mod) % mod
#define sub(a,b)   a = (a % mod - b % mod + mod) % mod
#define mul(a,b)   a = ((a % mod) * (b % mod)) % mod
#define div(a,b)   a = ((a%mod) * mpow(b, mod - 2)) % mod

#ifdef NSHU
#include "nish.h"
#define deb(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define deb(x...)
#endif
const int mod = 1e9+7;

${2}

void nishhere(ll tc){
    ${0}
}




int main() {
clock_t time_req = clock();
nishUwU


#ifdef NSHU 
freopen("issue.txt", "w", stderr); 
#endif

ll hurray = 1 ; 

cin>>hurray${1};

for(ll tc = 1 ; tc <=  hurray ; tc++){
// cout<< "Case #"<<tc<<": "; 
nishhere(tc);
}


#ifdef NSHU
    cerr << "Time : " << fixed << setprecision(6) << ((double)(clock() - time_req)) / CLOCKS_PER_SEC << endl;
#endif

    return 0;
}


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>letsdoit</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
